// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex`a080000000001020200000000000000000000000000000000060006000000000000000000000000000808080000000000000008000000000000000000000000000000000000000000000000000000000000000000050505000505050000000000000008080800000000000000000000000000000000090000000000000000000000000000000000000000000000000000000000000808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080008000000000000090000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000090000000000090909090909000000000000000000090000000000000000000009000000000000000000080000000000000009090909090909090909090909090909090909090909090909090909090900000000000000000000000008000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909000000`, img`
.............................................2....
............................................22....
........................................22.222....
..22.2...........22.................222.....22....
2......2.22........................22..2222.22....
22...................22...22222.2.2........222....
..22....2..2......2..........................2....
.....222....2.2.2.222.....2222........2222...2....
...22..............222.222...........22...2..2....
222.................22..2..........222.......2....
....................2........222.2222......222....
...........................................222....
...........................................222....
.............................................2....
.............................................2....
.............................................2....
..................................................
`, [myTiles.transparency16,sprites.dungeon.greenOuterNorth0,sprites.dungeon.darkGroundNorthWest0,sprites.builtin.oceanDepths0,sprites.dungeon.darkGroundNorth,sprites.castle.tileGrass2,sprites.builtin.forestTiles0,sprites.builtin.forestTiles10,sprites.dungeon.doorLockedWest,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
